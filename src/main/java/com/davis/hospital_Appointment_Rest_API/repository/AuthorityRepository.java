package com.davis.hospital_Appointment_Rest_API.repository;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.davis.hospital_Appointment_Rest_API.model.Authority;

/**
 * Spring Data JPA repository for {@link Authority} entities.
 * <p>
 * Provides CRUD operations and custom query methods for managing system authorities (permissions).
 * This repository enables the management of fine-grained access control permissions in the
 * Hospital Appointment System.
 * </p>
 *
 * <p><b>Key Features:</b></p>
 * <ul>
 *   <li>Inherits standard CRUD operations from {@link JpaRepository}</li>
 *   <li>Provides case-insensitive authority lookup</li>
 *   <li>Automatic implementation of query methods by Spring Data JPA</li>
 * </ul>
 *
 * @see Authority
 * @see org.springframework.data.jpa.repository.JpaRepository
 * @author CYPRIAN DAVIS
 * @version 1.0
 * @since 2023-06-15
 */
@Repository
public interface AuthorityRepository extends JpaRepository<Authority, Long> {

    /**
     * Finds an authority by its name with case-insensitive matching.
     * <p>
     * This method performs a case-insensitive search for authorities matching the specified name.
     * The implementation is automatically generated by Spring Data JPA.
     * </p>
     *
     * <p><b>Usage Example:</b></p>
     * <pre>
     * // Find the 'CREATE_APPOINTMENT' authority (case doesn't matter)
     * Authority auth = authorityRepository.findByNameIgnoreCase("create_appointment");
     * </pre>
     *
     * @param name the authority name to search for (case-insensitive)
     * @return the matching {@link Authority} or {@code null} if no match found
     * @see Authority#getName()
     */
    Authority findByNameIgnoreCase(String name);
}